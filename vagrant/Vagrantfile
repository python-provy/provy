VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'" # avoids 'stdin: is not a tty' error.
  config.ssh.private_key_path = ["#{ENV['HOME']}/.ssh/id_rsa","#{ENV['HOME']}/.vagrant.d/insecure_private_key"]
  config.vm.provision "shell", inline: <<-SCRIPT
    printf "%s\n" "#{File.read("#{ENV['HOME']}/.ssh/id_rsa.pub")}" > /home/vagrant/.ssh/authorized_keys
    chown -R vagrant:vagrant /home/vagrant/.ssh
  SCRIPT

  config.vm.define "frontend" do|frontend|
    frontend.vm.box = "precise64"
    frontend.vm.box_url = "http://files.vagrantup.com/precise64.box"
    frontend.vm.network "forwarded_port", guest: 80, host: 8080
    frontend.vm.network "private_network", ip: "33.33.33.33"
    frontend.vm.provider "virtualbox" do |vbf|
      vbf.customize ["modifyvm", :id, "--memory", "256"]
      vbf.customize ["modifyvm", :id, "--cpus", "1"]
      vbf.gui = false
    end
  end
  config.vm.define "backend" do|backend|
    backend.vm.box = "precise64"
    backend.vm.box_url = "http://files.vagrantup.com/precise64.box"
    backend.vm.network "forwarded_port", guest: 80, host: 8081
    backend.vm.network "private_network", ip: "33.33.33.34"
    backend.vm.provider "virtualbox" do |vbb|
      vbb.customize ["modifyvm", :id, "--memory", "256"]
      vbb.customize ["modifyvm", :id, "--cpus", "1"]
      vbb.gui = false
    end
  end
end
